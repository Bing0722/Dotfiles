{
  // Ai
  "edit_predictions": {
    "mode": "eager",
    "copilot": {
      "proxy": null,
      "proxy_no_verify": null
    },
    "enabled_in_assistant": true
  },
  "show_edit_predictions": true,
  "assistant": {
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-3-7-sonnet-latest"
    },
    "version": "2"
  },
  // 功能
  "features": {
    "edit_prediction_provider": "zed"
  },
  // 主题
  "icon_theme": "Catppuccin Macchiato",
  "theme": {
    "mode": "system",
    "light": "Catppuccin Macchiato",
    "dark": "Catppuccin Macchiato"
  },
  // 字体
  "buffer_font_family": "JetBrainsMono Nerd Font",
  "buffer_font_fallbacks": ["JetBrains Mono", "Zed Plex Sans"],
  "buffer_font_size": 25,
  "buffer_font_features": {
    // 是否启用连字
    "calt": true
  },
  // ui字体
  "ui_font_family": "JetBrainsMono Nerd Font",
  "ui_font_fallbacks": ["JetBrains Mono", "Zed Plex Sans"],
  "ui_font_size": 20,
  // 未使用代码的淡化程度
  "unnecessary_code_fade": 0.6,
  "vim_mode": true,
  "relative_line_numbers": true,
  "restore_on_startup": "last_workspace",
  // 自动在编辑器中输入时显示补全菜单
  // (无需显式请求)
  "show_completions_on_input": true,
  // 在补全菜单中显示内联和侧边栏文档
  "show_completion_documentation": true,
  // 在括号内显示方法签名
  "auto_signature_help": true,
  // 在完成补全或插入括号后显示签名帮助。
  // 如果启用了 `auto_signature_help`，此设置将被视为启用。
  "show_signature_help_after_edits": true,
  "autosave": "off",
  "indent_guides": {
    // 在编辑器中显示缩进参考线
    "enabled": true,
    // 缩进参考线的宽度(像素), 范围: 1 到 10
    "line_width": 1,
    // 活动缩进参考线的宽度(像素), 范围: 1 到 10
    "active_line_width": 2,
    // 控制缩进参考线如何着色
    // 此设置可以采用以下值:
    //
    // 1. "disabled" (禁用)
    // 2. "fixed" (固定颜色)
    // 3. "indent_aware" (基于缩进级别的颜色)
    "coloring": "indent_aware",
    "background_coloring": "disabled"
  },
  // 滚动时光标上下保持的行数
  "vertical_scroll_margin": 5,
  // 内联提示相关设置
  "inlay_hints": {
    // 全局启用提示,默认禁用
    "enabled": true,
    // 启用特定类型的提示,默认启用
    "show_type_hints": true,
    "show_parameter_hints": true,
    // LSP中的null/None类型提示
    "show_other_hints": true,
    // 是否为内联提示显示背景
    //
    // 如果设置为 `true`, 背景将使用主题的 `hint.background` 颜色
    "show_background": true,
    // 编辑缓冲区后请求提示前的等待时间(毫秒)
    // 设置为0以禁用去抖动
    "edit_debounce_ms": 700,
    // 滚动缓冲区后请求提示前的等待时间(毫秒)
    // 设置为0以禁用去抖动
    "scroll_debounce_ms": 50
  },
  // 编辑器标签页相关设置
  "tabs": {
    // 在编辑器标签页上显示Git状态颜色
    "git_status": true,
    // 标签页关闭按钮的位置
    "close_position": "right",
    // 在标签页上显示文件图标
    "file_icons": true,
    // 始终在标签页上显示关闭按钮
    "show_close_button": "always",
    // 关闭当前标签页后的行为
    //
    // 1. 激活上一个打开的标签页(默认):
    //     "history"
    // 2. 激活右侧标签页(如果可用):
    //     "neighbour"
    // 3. 激活左侧标签页(如果可用):
    //     "left_neighbour"
    "activate_on_close": "history"
  },
  // 是否在保存前格式化缓冲区
  // 注意: 如果启用了延迟自动保存, `format_on_save` 将被忽略
  "format_on_save": "on",
  // 添加代理
  "proxy": "http://127.0.0.1:7897",
  "file_icons": true,
  "git_status": true,
  "languages": {
    "C++": {
      "tab_size": 2
    },
    "Python": {
      "language_servers": ["pyright"],
      "tab_size": 4
    },
    "Rust": {
      "tab_size": 4
    },
    "Markdown": {
      "tab_size": 4
    },
    "Go": {
      "tab_size": 4
    }
  },
  "lsp": {
    "clangd": {
      "binary": {
        "arguments": [
          "--background-index", // 启用后台索引，在整个项目范围内建立索引，优化代码补全和跳转速度。
          "--clang-tidy", // 启用 Clang-Tidy 代码检查，帮助发现潜在的错误、代码风格问题等。
          "--completion-style=detailed", // 设置补全风格，detailed 模式会提供更详细的函数参数和返回值信息。
          "--function-arg-placeholders=0", // 关闭函数参数占位符，让补全时不会自动填充默认参数。
          "--header-insertion-decorators=0", // 关闭函数参数占位符，让补全时不会自动填充默认参数。
          "--fallback-style=llvm", // 设置默认的代码格式，如果 .clang-format 文件不存在，就使用 llvm/google 风格
          "-compile-commands-dir=build" // 指定 compile_commands.json 所在目录，确保 clangd 正确解析头文件和编译参数
        ]
      }
    },
    "pright": {
      "settings": {
        "python.analysis": {
          "diagnosticMode": "workspace",
          "typeCheckingMode": "strict"
        },
        "python": {
          "pythonPath": ".venv/bin/python"
        }
      }
    }
  },
  // 配置Jupyter
  "jupyter": {
    "enabled": true,
    // 以语言名称作为键，内核名称作为值
    "kernel_selections": {
      "python": "python3",
      "typescript": "deno"
    }
  }
}
